user www-data;
worker_processes auto;
load_module /usr/lib/nginx/modules/ngx_http_image_filter_module.so;
events {
}
http {

    include mime.types;

    server {
		listen 80;
		server_name 192.168.9.13;
		root /bloggingtemplate;

		# if ( $arg_name = 'nirulabs' ){
		# 	return 200 "Yes, I am nirulabs";
		# }
        
		# location /contactus { # anything will accept after /contactus/hi /contactus/Bye
		# 	return 200 "Hello!! This is NONE Block";
		# }
        
		# # Modifiers
		# location = /contactus { # nothing accept anything after /contactus 
		# 	return 200 "Hello!! This is Exact match Block";
		# }

        # # location ~ /aboutus { # it should match the /aboutus keyword
		# # 	return 200 "Hey URI is AboutUS REGEX CASE SENSITIVE";
		# # }
        # rewrite ^/guest/\w+ /aboutus;
        # location ~* /aboutus { # it should match the /aboutus keyword
		# 	return 200 "Hey URI is AboutUS REGEX CASE INSENSITIVE";
		# }

        # Variables
		# location /find {  # usage of args "http://192.168.9.13/find?apikey=12345"
		# 	return 200 "$hostname \n$args \n$Connection_requests \n$date_local";
		# }

        # REWRITE Directive
		# rewrite ^/guest/\w+ /welcome;  # it will accept IP/guest/nirulabs

		# rewrite ^/user/(\w+) /welcome/$1; 
		# location = /welcome/nirulabs { 
		# 	return 200 "Hello nirulabs, Welcome";
		# }

		# location /welcome { 
		# 	return 301 /assets/images/about/welcome-banner.jpg;
		# }
        ## try_files
		# try_files $uri   /videos /assets/images/profile_image.jpg /pics  /404;

        # location /video {
        #     return 200 "Enjoy the moovie, $uri";
		# }

        # location /pics {
        #     return 200 "Enjoy the: $uri";
		# }

		# location /404 {
        #     return 404 "SORRY, This resource doesnt exist! $uri";
		# }
        # try-files ends here
		## Begining of Log management
        # location /oracle {
        #        access_log /var/log/nginx/oracle.log; # This will automatically log logs to the oracle.log file
  		# 	   return 200 "hey, This page is served: $uri";
		# }
		# location /react {
        #        access_log off;  # This will stop logging files
		# 	   return 200 "hey, This page is served: $uri";
		# }		
		## End of logging
        ## Beginning of Dynamic Requests.

        # php-fpm
        index index.php index.html;
		location / {
			try_files $uri $uri/ =404;
		}
        location ~\.php$ {
			include fastcgi.conf;
			fastcgi_pass unix:/run/php/php7.4-fpm.sock;
		}
        ## End of php-fpm
		## Beginning of Worker Process
        ## mModules
		location = /assets/images/about/profile_image.jpg {
			image_filter rotate 180;

		}

	}
}